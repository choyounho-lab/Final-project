
-- INSERT PLAYLIST_TRACK PROCEDURE
CREATE OR REPLACE PROCEDURE INSERT_PLAYLIST_TRACK(
	p_playlistId IN PLAYLIST_TRACK.PLAYLIST_ID%TYPE,
	p_trackId IN PLAYLIST_TRACK.TRACK_ID%TYPE,
	p_trackOrder IN PLAYLIST_TRACK.TRACK_ORDER%TYPE,
	p_resultMsg OUT VARCHAR2
)
IS
	v_cnt NUMBER;
BEGIN
	 -- 제목 중복 체크
      SELECT COUNT(*) INTO v_cnt FROM PLAYLIST_TRACK
      WHERE PLAYLIST_ID = p_playlistId AND TRACK_ID = p_trackId;

      IF v_cnt > 0 THEN
        RAISE_APPLICATION_ERROR(-20000, '이미 동일한 곡이 존재합니다.');
      END IF;


      SELECT COUNT(*) INTO v_cnt FROM PLAYLIST_TRACK
      WHERE PLAYLIST_ID = p_playlistId;

      IF v_cnt >= 10 THEN
        RAISE_APPLICATION_ERROR(-20001, '사용자는 플레이리스트에 최대 10개의 곡을 담을 수 있습니다.');
      END IF;
	INSERT INTO PLAYLIST_TRACK(
		PLAYLIST_ID,
		TRACK_ID,
		TRACK_ORDER
	)
	VALUES (
		p_playlistId,
		p_trackId,
		p_trackOrder
	);
	p_resultMsg := 'SUCCESS';
	EXCEPTION
		WHEN OTHERS THEN
			p_resultMsg := 'ERROR: ' || SQLERRM;
END;




-- DELETE PLAYLIST_TRACK PROCEDURE
CREATE OR REPLACE PROCEDURE ECHO.DELETE_PLAYLIST_TRACK(
	playlistId IN PLAYLIST_TRACK.PLAYLIST_ID%TYPE,
	trackId IN PLAYLIST_TRACK.TRACK_ID%TYPE,
	resultMsg OUT VARCHAR2
)
IS
	v_exists NUMBER := 0;
BEGIN
	SELECT COUNT(*) INTO v_exists FROM PLAYLIST_TRACK WHERE PLAYLIST_ID = playlistId AND TRACK_ID = trackId;
	IF v_exists = 0 THEN
		resultMsg := '데이터가 없습니다.';
		RETURN;
	END IF;
	DELETE FROM PLAYLIST_TRACK WHERE PLAYLIST_ID = playlistId AND TRACK_ID = trackId;
	resultMsg := 'SUCCESS';
	COMMIT;
	EXCEPTION
		WHEN OTHERS THEN
			ROLLBACK;
			resultMsg := '오류 발생: ' || SQLERRM;
END;