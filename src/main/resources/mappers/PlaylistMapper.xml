<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.kh.mapper.PlaylistMapper">

<!--    <resultMap id="playlistResultMap" type="PlaylistVO">-->
<!--        <result property="playlistId" column="PLAYLIST_ID" />-->
<!--        <result property="userId" column="USER_ID" />-->
<!--        <result property="playlistTitle" column="PLAYLIST_TITLE" />-->
<!--        <result property="playlistIsPublic" column="PLAYLIST_IS_PUBLIC" />-->
<!--        <result property="playlistCreateDate" column="PLAYLIST_CREATE_DATE" />-->
<!--    </resultMap>-->
<!--    <select id="selectPlaylist" statementType="CALLABLE" parameterType="java.util.Map">-->
<!--        {-->
<!--            CALL SELECT_PLAYLIST(-->
<!--                #{userId, mode=IN, jdbcType=NUMERIC},-->
<!--                #{result, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=playlistResultMap}-->
<!--            )-->
<!--        }-->
<!--    </select>-->

    <select id="selectPlaylist" resultType="PlaylistVO" parameterType="PlaylistVO">
        SELECT ROW_NUMBER() OVER (ORDER BY PLAYLIST_CREATE_DATE DESC) AS ROW_NUM,
            PLAYLIST_ID,USER_ID, PLAYLIST_TITLE, PLAYLIST_IS_PUBLIC
        FROM PLAYLIST
        <where>
            <if test="userId != null and userId != 0">
                AND USER_ID = #{userId}
            </if>
            <if test="playlistId != null and playlistId != 0">
                and PLAYLIST_ID = #{playlistId}
            </if>
        </where>
        ORDER BY PLAYLIST_CREATE_DATE DESC
    </select>




    <insert id="insertPlaylist" statementType="CALLABLE" parameterType="PlaylistVO" >
        {
            CALL INSERT_PLAYLIST(
                #{userId, mode=IN, jdbcType=NUMERIC},
                #{playlistTitle, mode=IN, jdbcType=VARCHAR},
                #{playlistIsPublic, mode=IN, jdbcType=NUMERIC},
                #{resultMsg, mode=OUT, jdbcType=VARCHAR},
                #{playlistId, mode=OUT, jdbcType=NUMERIC}
            )
        }
    </insert>

    <update id="updatePlaylist" statementType="CALLABLE" parameterType="PlaylistVO">
        {
            CALL UPDATE_PLAYLIST(
                #{playlistId, mode=IN, jdbcType=NUMERIC},
                #{playlistTitle, mode=IN, jdbcType=VARCHAR},
                #{playlistIsPublic, mode=IN, jdbcType=NUMERIC},
                #{resultMsg, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </update>

    <delete id="deletePlaylist" statementType="CALLABLE" parameterType="PlaylistVO" >
        {
            CALL DELETE_PLAYLIST(
                #{playlistId, mode=IN, jdbcType=NUMERIC},
                #{resultMsg, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </delete>
</mapper>